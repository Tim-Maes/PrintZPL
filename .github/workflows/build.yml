name: Build & Publish Executables

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  CONFIGURATION: Release
  PROJECT_PATH: src/PrintZPL.Host/PrintZPL.Host.csproj
  FRAMEWORK: net8.0

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        runtime:
          - win-x64
          - linux-x64
          - osx-x64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET 6 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore "${{ env.PROJECT_PATH }}"

      - name: Publish single-file executable (${{ matrix.runtime }})
        run: |
          dotnet publish "${{ env.PROJECT_PATH }}" \
            -c ${{ env.CONFIGURATION }} \
            -r ${{ matrix.runtime }} \
            --self-contained true \
            /p:PublishSingleFile=true \
            /p:PublishTrimmed=true \
            /p:TrimMode=Link

      - name: Zip published output (${{ matrix.runtime }})
        run: |
          PUBLISH_DIR="src/PrintZPL.Host/bin/${{ env.CONFIGURATION }}/${{ env.FRAMEWORK }}/${{ matrix.runtime }}/publish"
          ZIP_NAME="PrintZPL-${{ matrix.runtime }}.zip"
          cd "$PUBLISH_DIR"
          zip -r "${{ github.workspace }}/$ZIP_NAME" .

      - name: Upload artifact for ${{ matrix.runtime }}
        uses: actions/upload-artifact@v4
        with:
          name: PrintZPL-${{ matrix.runtime }}
          path: PrintZPL-${{ matrix.runtime }}.zip
