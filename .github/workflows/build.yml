name: Build & Publish Executables

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  CONFIGURATION: Release
  PROJECT_PATH: src/PrintZPL.Host/PrintZPL.Host.csproj
  FRAMEWORK: net6.0

jobs:
  publish:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        runtime:
          - win-x64
          - linux-x64
          - osx-x64

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore ${{ env.PROJECT_PATH }}

    - name: Publish single-file executable (${ { matrix.runtime } })
      run: |
        dotnet publish ${{ env.PROJECT_PATH }} \
          -c ${{ env.CONFIGURATION }} \
          -r ${{ matrix.runtime }} \
          --self-contained true \
          /p:PublishSingleFile=true \
          /p:PublishTrimmed=true \
          /p:TrimMode=Link

    - name: Zip published output (${ { matrix.runtime } })
      run: |
        RUNTIME_DIR=src/PrintZPL.Host/bin/${{ env.CONFIGURATION }}/${{ env.FRAMEWORK }}/${{ matrix.runtime }}/publish
        ZIP_NAME=PrintZPL-${{ matrix.runtime }}.zip
        cd $RUNTIME_DIR
        zip -r ${{ github.workspace }}/$ZIP_NAME .

    - name: Upload artifact for ${{ matrix.runtime }}
      uses: actions/upload-artifact@v3
      with:
        name: PrintZPL-${{ matrix.runtime }}
        path: PrintZPL-${{ matrix.runtime }}.zip
